0001 ReplicatorG

TODO:
* test build process on windows
* test various gcodes that were implemented

DONE:

* convert from Arduino to ReplicatorG
* get new app to build
* convert .pde to .gcode
* get GUI working reliably
* create gcode running thread
* create gcode simulation thread
* create gcode simulation driver
* get text-highlighting up and running
* get machine driver-loading based on XML
* update RunButtonWatcher to work with our running and/or simulating thread (obsolete)
* move percentage / line count to bottom of window.
* remove HandleNewLibrary
* change 'Run' to 'Build'
* get help menu up and running properly (send everyone to website)
* add our ReplicatorG header to every file
* implement support for various gcode pauses / prompts / etc.
* change message dialog to yes/no dialog that allows you to cancel the operation
* test build process on linux
* test serialpassthrough driver
* add simple simulation window
* reformat GUI with different button ordering
* create and add 'pause' button
* update 'build' button graphic to be rotated 90 deg.
* add support for rest of low-hanging m codes
* finish implementation of ToolDrivers
* add a processing driver to calculate build time, look for errors, etc.
* finish gcode parsing for proper coordinates / machine status / etc.
* change colors to RepRap green (thanks nick bilton!)
* add elapsed time to build process
* add confirmation alert after print finishes
* add dispose after print finish
* update serialpassthroughdriver to pull all config from XML file
* update nulldriver to pull more config from XML file
* tweak play / pause button behavior
* get multi-print working solidly
* fix random freezing bug (it seems to be working)
* get inch support working
* add support for rest of low-hanging g codes

0002 ReplicatorG

* get auto-formatting working
* enhance simulation window
* experiment with SNAP driver?
* add simple exerciser / status window

0003 ReplicatorG

* add support for adding STL to sketch (for slicing)
* add STL 3D preview
* add simulation 3D preview (with 2D option as well)
* add support for slice/dice plugins (skeinforge?  reprap?)
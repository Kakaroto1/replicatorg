0001 ReplicatorG

TODO:
* create and add 'pause' button
* update 'build' button graphic to be rotated 90 deg.
* reformat GUI with different button ordering
* change colors to RepRap green (bilton?)
* test build process on windows
* add simple simulation window

DONE:

* convert from Arduino to ReplicatorG
* get new app to build
* convert .pde to .gcode
* get GUI working reliably
* create gcode running thread
* create gcode simulation thread
* create gcode simulation driver
* get text-highlighting up and running
* get machine driver-loading based on XML
* update RunButtonWatcher to work with our running and/or simulating thread (obsolete)
* move percentage / line count to bottom of window.
* remove HandleNewLibrary
* change 'Run' to 'Build'
* get help menu up and running properly (send everyone to website)
* add our ReplicatorG header to every file
* implement support for various gcode pauses / prompts / etc.
* change message dialog to yes/no dialog that allows you to cancel the operation
* test build process on linux
* test serialpassthrough driver

0002 ReplicatorG

* get auto-formatting working
* enhance simulation window
* experiment with SNAP driver?
* add simple exerciser / status window
* start working on queuePoint(), setPosition(), etc. driver functions

0003 ReplicatorG

* add support for adding STL to sketch (for slicing)
* add STL 3D preview
* add simluation 3D preview (with 2D option as well)
* add support for slice/dice plugins (skeinforge?  reprap?)